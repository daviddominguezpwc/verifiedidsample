#pragma checksum "/home/azureusercoffeeuniversity/GartnerHotel/verifiedidsample/Pages/Verifier.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "03a80fa0fa56f9c07cd3091cb8b0221c82569184"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCoreVerifiableCredentials.Pages.Pages_Verifier), @"mvc.1.0.razor-page", @"/Pages/Verifier.cshtml")]
namespace AspNetCoreVerifiableCredentials.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/home/azureusercoffeeuniversity/GartnerHotel/verifiedidsample/Pages/_ViewImports.cshtml"
using AspNetCoreVerifiableCredentials;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"03a80fa0fa56f9c07cd3091cb8b0221c82569184", @"/Pages/Verifier.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c9a6c6105e21e45cb7ef575038cfac3da5f8e208", @"/Pages/_ViewImports.cshtml")]
    #nullable restore
    public class Pages_Verifier : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "/home/azureusercoffeeuniversity/GartnerHotel/verifiedidsample/Pages/Verifier.cshtml"
  
    ViewData["Title"] = "Verifier";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"           <div style=""text-align: center;"">
                <object type = ""image/svg+xml"" data = ""key.svg""> </object>
                <h1>Gartner Hotel Key Verification</h1>
        
            <object type = ""image/svg+xml"" id = ""sign-in"" data = ""loading-icon.svg""> </object>
            <div id=""qrText""  style=""display:none;"">
                <p class=""small-text"">
                    <img src=""authenticator-icon.png"" alt=""Authenticator icon"" class=""icon-small""><br>
                    Scan with Microsoft Authenticator
                </p>
            </div>
            <a id=""deeplink"" style=""display: none;margin-top: 10px;"">Tap to open Authenticator on mobile</a>
            <div id=""qrcode"" style=""text-align: center""></div>
            <div id=""pinCodeText"" style=""display: none""></div>

            <div id=""message-wrapper"" class=""margin-bottom-75 margin-top-75"" style=""display: none"">
               <i class=""fas fa-user-check green icon-text-large margin-bottom-25""></i>
               <div id=""message");
            WriteLiteral(@"""></div>
                <br />
               <div id=""subject""></div>
                <br />
               <div id=""payload""></div>
            </div>

            <script src=""qrcode.min.js""></script>
            <script>
                var signIn = document.getElementById('sign-in');
                var signOut = document.getElementById('sign-out');
                var display = document.getElementById('display');
                var qrcode = new QRCode(""qrcode"", { width: 300, height: 300 });
                var respPresentationReq = null;

                document.addEventListener('DOMContentLoaded', () => {
                    fetch('/api/verifier/presentation-request')
                    .then(function(response) {
                        response.text()
                        .catch(error => document.getElementById(""message"").innerHTML = error)
                        .then(function(message) {
                            respPresentationReq = JSON.parse(message);
                            if( /An");
            WriteLiteral(@"droid/i.test(navigator.userAgent) ) {
                                console.log(`Android device! Using deep link (${respPresentationReq.url}).`);
                                window.location.href = respPresentationReq.url; setTimeout(function () {
                                window.location.href = ""https://play.google.com/store/apps/details?id=com.azure.authenticator""; }, 2000);
                            } else if (/iPhone/i.test(navigator.userAgent)) {
                                console.log(`iOS device! Using deep link (${respPresentationReq.url}).`);
                                window.location.replace(respPresentationReq.url);
                            } else {
                                console.log(`Not Android or IOS. Generating QR code encoded with ${message}`);
                                qrcode.makeCode(respPresentationReq.url);
                                document.getElementById('sign-in').style.display = ""none"";
                                document.getElementByI");
            WriteLiteral(@"d('qrText').style.display = ""block"";
                            }
                        }).catch(error => { console.log(error.message); })
                    }).catch(error => { console.log(error.message); })

                    var checkStatus = setInterval(function () {
                        fetch('api/verifier/presentation-response?id=' + respPresentationReq.id )
                            .then(response => response.text())
                            .catch(error => document.getElementById(""message"").innerHTML = error)
                            .then(response => {
                                if (response.length > 0) {
                                    console.log(response)
                                    respMsg = JSON.parse(response);
                                    // QR Code scanned
                                    if (respMsg.status == 'request_retrieved') {
                                        document.getElementById('message-wrapper').style.display = ""block"";
          ");
            WriteLiteral(@"                              document.getElementById('qrText').style.display = ""none"";
                                        document.getElementById('qrcode').style.display = ""none"";
					document.getElementById('sign-in').style.display = ""inline"";

                                        document.getElementById('message').innerHTML = respMsg.message;
                                    }
                                    
                                    if (respMsg.status == 'presentation_verified') {
                                        document.getElementById('message').innerHTML = respMsg.message;
                                        //document.getElementById('payload').innerHTML = ""Payload: "" + JSON.stringify(respMsg.payload);
                                        document.getElementById('subject').innerHTML = ""Welcome "" + respMsg.fullname +"" from "" + respMsg.company + "", to the Gartner Hotel. Please make sure to use this digital credential as the key for your room, 255F. On file we have");
            WriteLiteral(@" "" + respMsg.email + "" as your primary email address, if this isn't correct don't hesitate to speak to our receptionist."";
                                        clearInterval(checkStatus);
                                    }

                                }
                            })
                    }, 1500); //change this to higher interval if you use ngrok to prevent overloading the free tier service
                })
            </script>
            </div>

");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<AspNetCoreVerifiableCredentials.Pages.VerifierModel> Html { get; private set; } = default!;
        #nullable disable
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<AspNetCoreVerifiableCredentials.Pages.VerifierModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<AspNetCoreVerifiableCredentials.Pages.VerifierModel>)PageContext?.ViewData;
        public AspNetCoreVerifiableCredentials.Pages.VerifierModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
