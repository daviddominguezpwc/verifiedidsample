@page
@model AspNetCoreVerifiableCredentials.Pages.IssuerModel
@{
    ViewData["Title"] = "Issuer";
}
	    <ul class="breadcrumb">
                <li id = "homeli"><a href="/"><object type="image/svg+xml" data="home-icon.svg" style="pointer-events: none;"> </object></a></li>
		<li id = "homeli" style = "padding-left: 5px; padding-right: 5px"><object type ="image/svg+xml" data = "chevron-icon.svg"></object> </li>
		<li id = "homeli" style = "padding-bottom: 5px"> Issue Credential </li>
            </ul>
	    <div class = "flex-home">
                <div class = "picture-div-home">
                <object type="image/svg+xml" data="key.svg"> </object>
                </div>

                <div class = "text-container">
                <h1>Issue Credential</h1>
                <h1>Scan the QR code below with your Microsoft Authenticator app to retrieve your credential.</h1>

                </div>
            </div>
	    <div style="text-align: center;">
 
            @*<button type="button" id="sign-in" class="button">GET KEY</button>*@
	    <object type = "image/svg+xml" id = "sign-in" data = "loading-icon.svg"> </object>
            <div id="errorMessage"></div>
            <br />
            <div id="qrText"  style="display:none;">
                <p class="small-text">
                    <img src="authenticator-icon.png" alt="Authenticator icon" class="icon-small"><br>
                    Scan with Microsoft Authenticator
                </p>
            </div>
            <a id="deeplink" style="display: none;margin-top: 10px;">Tap to open Authenticator on mobile</a>
            <div id="qrcode" style="text-align: center"></div>
            <div id="pinCodeText" style="display: none"></div>

            <div id="message-wrapper" class="margin-bottom-75 margin-top-75" style="display: none">
               <i class="fas fa-user-check green icon-text-large margin-bottom-25"></i>
               <div id="message"></div>
               <br />
               <div id="payload"></div>
            </div>

            <script src="qrcode.min.js"></script>
            <script>
                var signIn = document.getElementById('sign-in');
                var signOut = document.getElementById('sign-out');
                var display = document.getElementById('display');
                var qrcode = new QRCode("qrcode", { width: 300, height: 300 });
                var respIssuanceReq = null;

document.addEventListener('DOMContentLoaded', () => {
    fetch('/api/issuer/issuance-request')
        .then(response => response.text())
        //.catch(error => { console.log(error.message); document.getElementById("errorMessage").innerHTML += error.message; })
        .then(function(message) {
            respIssuanceReq = JSON.parse(message);
            if (/Android/i.test(navigator.userAgent)) {
                console.log(`Android device! Using deep link (${respIssuanceReq.url}).`);
                window.location.href = respIssuanceReq.url; setTimeout(function() {
                    window.location.href = "https://play.google.com/store/apps/details?id=com.azure.authenticator";
                }, 2000);
            } else if (/iPhone/i.test(navigator.userAgent)) {
                console.log(`iOS device! Using deep link (${respIssuanceReq.url}).`);
                window.location.replace(respIssuanceReq.url);
            } else {
                console.log(`Not Android or IOS. Generating QR code encoded with ${message}`);
                qrcode.makeCode(respIssuanceReq.url);
                document.getElementById('sign-in').style.display = "none";
                document.getElementById('qrText').style.display = "block";
                if (respIssuanceReq.pin) {
                    document.getElementById('pinCodeText').innerHTML = "Pin code: " + respIssuanceReq.pin;
                    document.getElementById('pinCodeText').style.display = "block";
                }

		
                var checkStatus = setInterval(function() {
                    fetch('api/issuer/issuance-response?id=' + respIssuanceReq.id)
                        .then(response => response.text())
                        .catch(error => document.getElementById("message").innerHTML += error)
                        .then(response => {
                            if (response.length > 0) {
                                console.log(response)
                                respMsg = JSON.parse(response);
                                // QR Code scanned, show pincode if pincode is required
                                if (respMsg.status == 'request_retrieved') {
                                    document.getElementById('message-wrapper').style.display = "block";
                                    document.getElementById('qrText').style.display = "none";
                                    document.getElementById('qrcode').style.display = "none";
				    document.getElementById('sign-in').style.display = "inline";

                                    if (respMsg.pin) {
                                        document.getElementById('pinCodeText').style.display = "visible";
                                }
                                    document.getElementById('message').innerHTML = respMsg.message;
                                }
                                if (respMsg.status == 'issuance_successful') {
				    document.getElementById('sign-in').style.display = "none";
                                    document.getElementById('pinCodeText').style.display = "none";
                                    document.getElementById('message').innerHTML = respMsg.message;
				    window.location.href = "/verifier";
                                    clearInterval(checkStatus);
                                }
                                if (respMsg.status == 'issuance_error') {
                                    document.getElementById('pinCodeText').style.display = "none";
                                    document.getElementById('message').innerHTML = "Issuance error occured, did you enter the wrong pincode? Please refresh the page and try again.";
                                    document.getElementById('payload').innerHTML = "Payload: " + respMsg.payload;
                                    clearInterval(checkStatus);
                                }
                            }
                        })
                }, 1500); //change this to higher interval if you use ngrok to prevent overloading the free tier service

            }
        }).catch(error => { console.log(error.message); document.getElementById("errorMessage").innerHTML += error.message; })
});                
            </script>
            </div>

